@model school.ViewModel.TeacherVM

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>TeacherVM</h4>
<hr />
@if (!ViewData.ModelState.IsValid)
{
    <span class="alert-danger">
        @ViewData.ModelState["editError"]?.Errors.FirstOrDefault()?.ErrorMessage
    </span>
}
<div class="row">
    <div class="col-md-4">
        @using(Html.BeginForm("Edit", "Teacher", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.Id)
            
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        }
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
